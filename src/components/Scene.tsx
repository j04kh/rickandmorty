/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Nika Mumladze (https://sketchfab.com/nikam12345678)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/rick-and-morty-garage-fan-art-4e882af2241d43bc9870ad7ef13fe539
title: Rick and Morty Garage (Fan Art)
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Wood_WoodMat_0: THREE.Mesh;
    Wood_Outline_0: THREE.Mesh;
    Wall_WallMat_0: THREE.Mesh;
    Wall_Outline_0: THREE.Mesh;
    Floor_FloorMat_0: THREE.Mesh;
    ["Cable-Dark_Cable-DarkMat_0"]: THREE.Mesh;
    ["Cable-Dark_Outline_0"]: THREE.Mesh;
    ["Cable-Light_Cable-LightMat_0"]: THREE.Mesh;
    ["Cable-Light_Outline_0"]: THREE.Mesh;
    Background_BackgroundMat_0: THREE.Mesh;
    Window_InteriorMat_0: THREE.Mesh;
    Wood001_WoodMat_0: THREE.Mesh;
    Wood001_Outline_0: THREE.Mesh;
    Ceiling_CeilingMat_0: THREE.Mesh;
    Ceiling_Outline_0: THREE.Mesh;
    Glass_InteriorMat_0: THREE.Mesh;
    Interior_InteriorMat_0: THREE.Mesh;
    Interior_Outline_0: THREE.Mesh;
  };
  materials: {
    WoodMat: THREE.MeshBasicMaterial;
    Outline: THREE.MeshBasicMaterial;
    WallMat: THREE.MeshBasicMaterial;
    FloorMat: THREE.MeshBasicMaterial;
    ["Cable-DarkMat"]: THREE.MeshBasicMaterial;
    ["Cable-LightMat"]: THREE.MeshBasicMaterial;
    BackgroundMat: THREE.MeshBasicMaterial;
    InteriorMat: THREE.MeshBasicMaterial;
    CeilingMat: THREE.MeshBasicMaterial;
  };
};

export default function Model({ ...props }: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF("/scene.gltf") as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.01}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group
            position={[200, 0, -70]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={[100, 100, 100]}
          >
            <mesh
              geometry={nodes.Wood_WoodMat_0.geometry}
              material={nodes.Wood_WoodMat_0.material}
            />
            <mesh
              geometry={nodes.Wood_Outline_0.geometry}
              material={nodes.Wood_Outline_0.material}
            />
          </group>
          <group position={[0, 100, -80]} scale={100}>
            <mesh
              geometry={nodes.Wall_WallMat_0.geometry}
              material={materials.WallMat}
            />
            <mesh
              geometry={nodes.Wall_Outline_0.geometry}
              material={nodes.Wall_Outline_0.material}
            />
          </group>
          <group rotation={[-Math.PI / 2, 0, 0]} scale={[100, 100, 100]}>
            <mesh
              geometry={nodes.Floor_FloorMat_0.geometry}
              material={materials.FloorMat}
            />
          </group>
          <group
            position={[-100, 300, -74.51]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={[100, 100, 100]}
          >
            <mesh
              geometry={nodes["Cable-Dark_Cable-DarkMat_0"].geometry}
              material={materials["Cable-DarkMat"]}
            />
            <mesh
              geometry={nodes["Cable-Dark_Outline_0"].geometry}
              material={nodes["Cable-Dark_Outline_0"].material}
            />
          </group>
          <group
            position={[-86.89, 300, -74.51]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={[100, 100, 100]}
          >
            <mesh
              geometry={nodes["Cable-Light_Cable-LightMat_0"].geometry}
              material={materials["Cable-LightMat"]}
            />
            <mesh
              geometry={nodes["Cable-Light_Outline_0"].geometry}
              material={nodes["Cable-Light_Outline_0"].material}
            />
          </group>
          <group position={[275, 165, -144.62]} scale={114.94}>
            <mesh
              geometry={nodes.Background_BackgroundMat_0.geometry}
              material={materials.BackgroundMat}
            />
          </group>
          <group
            position={[275, 172.57, -74.62]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={[100, 100, 100]}
          >
            <mesh
              geometry={nodes.Window_InteriorMat_0.geometry}
              material={nodes.Window_InteriorMat_0.material}
            />
          </group>
          <group
            position={[158.37, 219.91, 200.82]}
            rotation={[-3.14, -0.77, 2.95]}
            scale={100}
          />
          <group
            position={[-200, 0, 719.82]}
            rotation={[-Math.PI / 2, 0, -Math.PI]}
            scale={[100, 100, 100]}
          >
            <mesh
              geometry={nodes.Wood001_WoodMat_0.geometry}
              material={nodes.Wood001_WoodMat_0.material}
            />
            <mesh
              geometry={nodes.Wood001_Outline_0.geometry}
              material={nodes.Wood001_Outline_0.material}
            />
          </group>
          <group
            position={[0, 341.49, 0]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={[100, 100, 100]}
          >
            <mesh
              geometry={nodes.Ceiling_CeilingMat_0.geometry}
              material={materials.CeilingMat}
            />
            <mesh
              geometry={nodes.Ceiling_Outline_0.geometry}
              material={nodes.Ceiling_Outline_0.material}
            />
          </group>
          <group
            position={[-285.67, 100.83, 650.88]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={[100, 100, 100]}
          >
            <mesh
              geometry={nodes.Glass_InteriorMat_0.geometry}
              material={nodes.Glass_InteriorMat_0.material}
            />
          </group>
          <group
            position={[30, 0, 1.2]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={[100, 100, 100]}
          >
            <mesh
              geometry={nodes.Interior_InteriorMat_0.geometry}
              material={nodes.Interior_InteriorMat_0.material}
            />
            <mesh
              geometry={nodes.Interior_Outline_0.geometry}
              material={nodes.Interior_Outline_0.material}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/scene.gltf");
